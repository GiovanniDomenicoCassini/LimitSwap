 default_false_settings = [
        'ENABLED',
        'USECUSTOMBASEPAIR',
        'HASFEES',
        'RUGDOC_CHECK',
        'MULTIPLEBUYS',
        'KIND_OF_SWAP',
        'ALWAYS_CHECK_BALANCE',
        'WAIT_FOR_OPEN_TRADE',
        'WATCH_STABLES_PAIRS',
        'ANTIRUG'
    ]
    
    default_value_settings = {
        'SLIPPAGE': 49,
        'BUYAMOUNTINTOKEN': 0,
        'MAXTOKENS': 0,
        'MOONBAG': 0,
        'MINIMUM_LIQUIDITY_IN_DOLLARS': 10000,
        'MAX_BASE_AMOUNT_PER_EXACT_TOKENS_TRANSACTION': 0.5,
        'SELLAMOUNTINTOKENS': 'all',
        'GAS': 8,
        'MAX_GAS': 99999,
        'BOOSTPERCENT': 50,
        'GASLIMIT': 1000000,
        'BUYAFTER_XXX_SECONDS': 0,
        'ANTIRUG': "",
        'XXX_SECONDS_COOLDOWN_AFTER_BUY_SUCCESS_TX': 0,
        'XXX_SECONDS_COOLDOWN_AFTER_SELL_SUCCESS_TX': 0,
        'MAX_FAILED_TRANSACTIONS_IN_A_ROW': 2,
        'MAX_SUCCESS_TRANSACTIONS_IN_A_ROW': 2,
        'GASPRIORITY_FOR_ETH_ONLY': 1.5,
        'STOPLOSSPRICEINBASE': 0,
        'BUYCOUNT': 0,
        'PINKSALE_PRESALE_ADDRESS': "",
        '_STABLE_BASES': {}
    }
    
    # There are values that we will set internally. They must all begin with _
    # _LIQUIDITY_CHECKED    - false if we have yet to check liquidity for this token
    # _INFORMED_SELL        - set to true when we've already informed the user that we're selling this position
    # _LIQUIDITY_READY      - a flag to test if we've found liquidity for this pair
    # _LIQUIDITY_CHECKED    - a flag to test if we've check for the amount of liquidity for this pair
    # _INFORMED_SELL        - a flag to store that we've printed to console that we are going to be selling the position
    # _REACHED_MAX_TOKENS   - flag to look at to determine if the user's wallet has reached the maximum number of flags
    #                         this flag is used for conditionals throughout the run of this bot. Be sure to set this
    #                         flag after enough tokens that brings the number of token up to the MAXTOKENS. In other words
    #                         done depend on (if MAXTOKENS < _TOKEN_BALANCE) conditionals
    # _GAS_TO_USE           - the amount of gas the bot has estimated it should use for the purchase of a token
    #                         this number is calculated every bot start up
    # _FAILED_TRANSACTIONS  - the number of times a transaction has failed for this token
    # _SUCCESS_TRANSACTIONS - the number of times a transaction has succeeded for this token
    # _REACHED_MAX_SUCCESS_TX  - flag to look at to determine if the user's wallet has reached the maximum number of flags
    #                         this flag is used for conditionals throughout the run of this bot. Be sure to set this
    #                         flag after enough tokens that brings the number of token up to the MAX_SUCCESS_TRANSACTIONS_IN_A_ROW. In other words
    #                         done depend on (if MAX_SUCCESS_TRANSACTIONS_IN_A_ROW < _REACHED_MAX_SUCCESS_TX) conditionals
    # _TRADING_IS_ON        - defines if trading is ON of OFF on a token. Used with WAIT_FOR_OPEN_TRADE parameter
    # _SELL_BEFORE_RUG      - decision to sell before a rug. Used to sell before liquidity is pulled, trading is disabled or high taxes 
    # _RUGDOC_DECISION      - decision of the user after RugDoc API check
    # _TOKEN_BALANCE        - the number of traded tokens the user has in his wallet
    # _PREVIOUS_TOKEN_BALANCE - the number of traded tokens the user has in his wallet before BUY order
    # _IN_TOKEN             - _IN_TOKEN is the token you want to BUY (example : CAKE)
    # _OUT_TOKEN            - _OUT_TOKEN is the token you want to TRADE WITH (example : ETH or USDT)
    # _BASE_BALANCE         - balance of Base token, calculated at bot launch and after a BUY/SELL
    # _BASE_PRICE           - price of Base token, calculated at bot launch with calculate_base_price
    # _BASE_USED_FOR_TX     - amount of base balance used to make the Tx transaction
    # _PAIR_TO_DISPLAY      - token symbol / base symbol
    # _CUSTOM_BASE_BALANCE  - balance of Custom Base token, calculated at bot launch and after a BUY/SELL
    # _QUOTE                - holds the token's quote
    # _PREVIOUS_QUOTE       - holds the ask price for a token the last time a price was queried, this is used
    #                         to determine the direction the market is going
    # _COST_PER_TOKEN       - the calculated/estimated price the bot paid for the number of tokens it traded
    # _CALCULATED_SELLPRICEINBASE           - the calculated sell price created with build_sell_conditions()
    # _CALCULATED_STOPLOSSPRICEINBASE       - the calculated stoploss price created with build_sell_conditions()
    # _ALL_TIME_HIGH        - the highest price a token has had since the bot was started
    # _ALL_TIME_LOW         - the lowest price a token has had since the bot was started
    # _CONTRACT_DECIMALS    - the number of decimals a contract uses. Used to speed up some of our processes
    #                         instead of querying the contract for the same information repeatedly.
    # _BASE_DECIMALS        - the number of decimals of custom base pair. Used to speed up some of our processes
    #                         instead of querying the contract for the same information repeatedly.
    # _WETH_DECIMALS        - the number of decimals of weth.
    # _LIQUIDITY_DECIMALS   - the number of decimals of liquidity.
    # _LAST_PRICE_MESSAGE   - a copy of the last pricing message printed to console, used to determine the price
    #                         should be printed again, or just a dot
    # _LAST_MESSAGE         - a place to store a copy of the last message printed to conside, use to avoid
    #                         repeated liquidity messages
    # _GAS_IS_CALCULATED    - if gas needs to be calculated by wait_for_open_trade or antirug this parameter is set to true
    # _EXCHANGE_BASE_SYMBOL - this is the symbol for the base that is used by the exchange the token is trading on
    # _PAIR_SYMBOL          - the symbol for this TOKEN/BASE pair